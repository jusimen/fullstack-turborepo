name: API Workflow

on:
    workflow_dispatch:
    push:
        branches:
            - master
        paths:
            - 'apps/api/**'
    pull_request:
        branches:
            - master
        paths:
            - 'apps/api/**'

env:
    PROJECT_ID: fullstack-turborepo # TODO: update Google Cloud project id
    SERVICE: nest-api # TODO: update Cloud Run service name
    REGION: europe-west1 # TODO: update Cloud Run service region
    GAR_LOCATION: europe-west1

jobs:
    # Build API job in the GitHub Actions workflow.
    build:
        name: Build API
        runs-on: ubuntu-latest

        steps:
            #Checkout step in the GitHub Actions workflow.
            - name: Checkout
              uses: actions/checkout@v2

            #Setup Node.js step in the GitHub Actions workflow.
            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'yarn'

            - name: Install dependencies
              run: yarn

            - name: Generate Models
              run: yarn generate

            - name: Build
              run: yarn build:api

    # Deploy API and Web job in the GitHub Actions workflow.
    # API will be deployed to Google Cloud Run
    deploy:
        name: Deploy API to Cloud Run
        needs: build
        # Add 'id-token' with the intended permissions for workload identity federation
        permissions:
            contents: 'read'
            id-token: 'write'

        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Google Auth
              id: auth
              uses: 'google-github-actions/auth@v2'
              with:
                  workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
                  service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

            # Authenticate Docker to Google Cloud Artifact Registry
            - name: Docker Auth
              id: docker-auth
              uses: 'docker/login-action@v3'
              with:
                  username: 'oauth2accesstoken'
                  password: '${{ steps.auth.outputs.access_token }}'
                  registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

            - name: Build and Push Container
              run: |-
                  docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}" ./apps/api
                  docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"

            - name: Deploy to Cloud Run
              id: deploy
              uses: google-github-actions/deploy-cloudrun@v2
              with:
                  service: ${{ env.SERVICE }}
                  region: ${{ env.REGION }}
                  # NOTE: If required, update to the appropriate source folder
                  image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

            # If required, use the Cloud Run url output in later steps
            - name: Show Output
              run: echo ${{ steps.deploy.outputs.url }}
